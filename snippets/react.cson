'.source.js':

  "ppeerit: import empty file":
    prefix: 'pi'
    body: "import '${1:FilePath}'"

  "ppeerit: import empty":
    prefix: 'pim'
    body: "import ${1:Name} from '${2:package}'"

  "ppeerit: import empty with object":
    prefix: 'pimo'
    body: "import {${1:Name}} from '${2:package}'"

  "ppeerit: import react":
    prefix: 'pimr'
    body: "import React from 'react'"

  "ppeerit: import react-dom":
    prefix: 'pimrd'
    body: "import ReactDom from 'react-dom'"

  "ppeerit: import prop-types":
    prefix: 'pimp'
    body: "import PropTypes from 'prop-types'"

  "ppeerit: constructor":
    prefix: 'pcs'
    body: """
      constructor(props) {
        super(props)
      }
    """

  "ppeerit: constructor with state":
    prefix: 'pcss'
    body: """
      constructor(props) {
        super(props)
        this.state = {
          ${1}: ${2}
        }
      }
    """

  "ppeerit: render":
    prefix: 'prd'
    body: """
      render() {
        return (${1:<div>Component</div>})
      }
    """

  "ppeerit: state":
    prefix: 'pst'
    body: """
      this.state = {
        ${1}: ${2}
      }
    """

  "ppeerit: setState":
    prefix: 'psst'
    body: """
      this.setState({
        ${1}: ${2}
      })
    """

  "ppeerit: get state":
    prefix: 'pgst'
    body: "const {${1}} = this.state"

  "ppeerit: get props":
    prefix: 'pgp'
    body: "const {${1}} = this.props"

  "ppeerit: fn es6 define":
    prefix: 'pfnd'
    body: """
      ${1:FunctionName} = (${2}) => {
        ${3}
      }
    """

  "ppeerit: componentDidMount":
    prefix: 'pcdm'
    body: """
      componentDidMount() {
          ${1}
      }
    """

  "ppeerit: componentDidMount":
    prefix: 'pcdum'
    body: """
      componentWillUnmount() {
          ${1}
      }
    """

  "ppeerit: Create Component":
    prefix: 'prc'
    body: """
      import React from 'react'

      class ${1:MyComponent} extends React.Component {
        render() {
          return (${2:<div>MyComponent</div>})
        }
      }

      export default ${1}

    """

  "ppeerit: Create ReactDom":
    prefix: 'prdc'
    body: """
      import React from 'react'
      import ReactDom from 'react-dom'

      ReactDOM.render(
        ${1:<div>component</div>},
        document.getElementById('${2:app}')
      )

    """

  "ppeerit: Create Component with constructor":
    prefix: 'prcc'
    body: """
      import React from 'react'

      class ${1:MyComponent} extends React.Component {
        constructor(props) {
          super(props)
        }

        render() {
          return (${2:<div>MyComponent</div>})
        }
      }

      export default ${1}

    """

  "ppeerit: Create Component with proptypes":
    prefix: 'prccp'
    body: """
      import React from 'react'
      import PropTypes from 'prop-types'

      class ${1:MyComponent} extends React.Component {
        render() {
          return (${2:<div>MyComponent</div>})
        }
      }

      ${1}.propTypes = {}

      ${1}.defaultProps = {}

      export default ${1}

    """

  "ppeerit: set prop-types":
    prefix: "pspt"
    body: """
      ${1}.propTypes = {}
    """

  "ppeerit: default prop-types":
    prefix: "pdpt"
    body: """
      ${1}.defaultProps = {}
    """
